services:
  app:
    user: "${UID}:${GID}"
    build:
      args:
        user: daniel
        uid: "${UID}"
      context: ./
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - laravel_network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8686:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/:/etc/nginx/conf.d/
    networks:
      - laravel_network

  mysql:
    image: mysql:5.7.22
    restart: unless-stopped
    ports:
      - "3307:3307"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_TCP_PORT: 3307
    volumes:
      - ./.docker/mysql/dbdata:/var/lib/mysql
    networks:
      - laravel_network

  # redis
  redis:
    image: redis:7.2
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - laravel_network

  #queue
  queue:
    user: "${UID}:${GID}"
    build:
      args:
        user: daniel
        uid: "${UID}"
      context: ./
      dockerfile: Dockerfile
    restart: always
    command: "php artisan queue:work --tries=1 --timeout=30"
    volumes:
      - ./:/var/www
    depends_on:
      - redis
      - app
    networks:
      - laravel_network

  #horizon
  horizon:
    build:
      args:
        user: daniel
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    restart: always
    command: "php artisan horizon"
    volumes:
      - ./:/var/www
    depends_on:
      - redis
      - app
    networks:
      - laravel_network

networks:
  laravel_network:
    driver: bridge
